// Put all global scss stuff (variables, mixins, etc) here

@use "sass:map";
@use "sass:string";

$max-width: 1800px;
$default-padding: 8px;

// Colors
$accent-color: #00a0ff;
$foreground-color: #000;
$background-color: #FFF;
$gray: #E0E0E0;
$dark-gray: #616161;
$near-black: #2a2426;
$text-color-dark: #212121;
$text-color-light: #FDFDFD;
$react-background: #2a2c32;
$ts-background: #235a97;
$dark-theme: "dark-theme";
$light-theme: "light-theme";
$themes: (
  $light-theme: (    
    $foreground-color: #000,
    $background-color: #FFF,
  ),
  $dark-theme: (
    $foreground-color: #FFF,
    $background-color: #212127,
  )
);

@mixin theme-property($theme, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties) {
  @if $additionalPropertiesPositionIsFront {
    #{$property}: string.unquote($additionalProperties + ' ' + map.get($theme, $color));
  } @else {
    #{$property}: string.unquote(map.get($theme, $color) + ' ' + $additionalProperties);
  }
}

@mixin theme($property, $color, $additionalPropertiesPositionIsFront: false, $additionalProperties: '') {
  $light: map.get($themes, $light-theme);
  $dark: map.get($themes, $dark-theme);

  @include theme-property($light, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties);

  @media (prefers-color-scheme: dark) {
    @include theme-property($dark, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties);
  }
}

// For use in JS
:export {
  accentColor: $accent-color;
  gray: $gray;
  darkGray: $dark-gray;
  nearBlack: $near-black;
  textColorDark: $text-color-dark;
  textColorLight: $text-color-light;
  reactBackground: $react-background;
  tsBackground: $ts-background;
}
