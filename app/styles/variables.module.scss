// Put all global scss stuff (variables, mixins, etc) here

$max-width: 1800px;
$default-padding: 8px;

// Colors
$accent-color: #00a0ff;
$light-accent-color: #0CD1E8;
$dark-accent-color: #0C5DE8;

$foreground-color: #000000;
$background-color: #FFFFFF;

$gray: #E0E0E0;
$dark-gray: #616161;
$near-black:#2a2426;

$text-color-dark: #212121;
$text-color-light: #FDFDFD;

$dark-theme: "dark-theme";
$light-theme: "light-theme";
$themes: (
  $light-theme: (    
    $foreground-color: #000000,
    $background-color: #FFFFFF,
  ),
  $dark-theme: (
    $foreground-color: #FFFFFF,
    $background-color: #212127,
  )
);

@mixin themeProperty($theme, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties) {
  @if $additionalPropertiesPositionIsFront {
    #{$property}: unquote($additionalProperties + ' ' + map-get($theme, $color));
  } @else {
    #{$property}: unquote(map-get($theme, $color) + ' ' + $additionalProperties);
  }
}

@mixin theme($property, $color, $additionalPropertiesPositionIsFront: false, $additionalProperties: '') {
  $light: map-get($themes, $light-theme);
  $dark: map-get($themes, $dark-theme);

  @include themeProperty($light, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties);

  @media (prefers-color-scheme: dark) {
    @include themeProperty($dark, $property, $color, $additionalPropertiesPositionIsFront, $additionalProperties);
  }
}

// For use in JS
:export {
  accentColor: $accent-color;
  lightAccentColor: $light-accent-color;
  darkAccentColor: $dark-accent-color;

  gray: $gray;
  darkGray: $dark-gray;
  nearBlack: $near-black;

  textColorDark: $text-color-dark;
  textColorLight: $text-color-light;
}
